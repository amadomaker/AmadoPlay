// ===== SISTEMA EDUCATIVO DOS TR√äS PODERES - JAVASCRIPT CORRIGIDO =====

class ThreePowersEducationSystem {
    constructor() {
        // Estado do sistema
        this.currentScreen = 'loading-screen';
        this.currentStoryNode = 'start';
        this.totalDecisions = 0;
        this.correctChoices = 0;
        this.learningPoints = 0;
        
        // Dados do usu√°rio
        this.userProgress = {
            completedIntro: false,
            decisionsPath: [],
            achievements: [],
            startTime: null,
            endTime: null
        };

        // Hist√≥ria interativa - Situa√ß√£o dos Celulares (Sistema Narrativo Completo)
        this.storyNodes = {
            start: {
                chapter: 1,
                title: "O Problema Surge na Escola",
                emoji: "üè´",
                narrator: "Narrador do Sistema",
                text: "Na Escola Municipal Esperan√ßa, a diretora Carla observa uma cena que se repete todos os dias: alunos completamente distra√≠dos com celulares durante as aulas. Os professores est√£o preocupados, pois os estudantes n√£o prestam aten√ß√£o nas explica√ß√µes e o rendimento est√° caindo.",
                character: {
                    name: "Diretora Carla",
                    avatar: "üë©‚Äçüíº",
                    dialogue: "Essa situa√ß√£o n√£o pode continuar! Os celulares est√£o prejudicando o aprendizado dos nossos alunos. Mas eu preciso resolver isso da forma correta, seguindo os princ√≠pios democr√°ticos. Qual caminho devo tomar?"
                },
                info: "Esta √© uma situa√ß√£o real que acontece em muitas escolas do Brasil. Como cidad√£os, precisamos saber qual √© a forma correta e democr√°tica de resolver problemas como este!",
                choices: [
                    {
                        id: "choice_start_1",
                        power: "executivo",
                        icon: "üè¢",
                        title: "Decis√£o Imediata",
                        description: "A diretora deve proibir os celulares imediatamente usando sua autoridade!",
                        nextNode: "executive_hasty"
                    },
                    {
                        id: "choice_start_2", 
                        power: "legislativo",
                        title: "Consulta Democr√°tica",
                        icon: "üìú",
                        description: "Vamos conversar com pais, alunos e professores para criar regras em conjunto.",
                        nextNode: "legislative_discussion"
                    },
                    {
                        id: "choice_start_3",
                        power: "judiciario",
                        icon: "‚öñÔ∏è",
                        title: "Buscar Orienta√ß√£o Legal",
                        description: "Vamos consultar um advogado para saber nossos direitos legais.",
                        nextNode: "judiciary_consultation"
                    }
                ]
            },

            executive_hasty: {
                chapter: 2,
                title: "A Decis√£o Autorit√°ria",
                emoji: "‚ö†Ô∏è",
                narrator: "Consequ√™ncia da Escolha",
                text: "A diretora Carla decide resolver o problema sozinha. No dia seguinte, ela coloca cartazes por toda escola: 'PROIBIDO USAR CELULAR - DECIS√ÉO DA DIRE√á√ÉO'. Tamb√©m envia um comunicado aos pais informando a nova regra, sem consulta pr√©via.",
                character: {
                    name: "Jo√£o - Pai de Aluno",
                    avatar: "üò°",
                    dialogue: "Isso √© um absurdo! Quem disse que a diretora pode decidir sozinha sobre isso? E se meu filho tiver uma emerg√™ncia m√©dica? Eu trabalho longe e preciso me comunicar com ele! N√£o concordo com essa imposi√ß√£o!"
                },
                info: "Quando uma pessoa toma decis√µes importantes sozinha, sem consultar os afetados, pode gerar revolta e resist√™ncia na comunidade.",
                choices: [
                    {
                        id: "choice_exec_1",
                        power: "legislativo",
                        icon: "üìú",
                        title: "Reconsiderar e Consultar",
                        description: "A diretora percebe o erro e decide ouvir a comunidade escolar.",
                        nextNode: "executive_learns"
                    },
                    {
                        id: "choice_exec_2",
                        power: "executivo",
                        icon: "üè¢", 
                        title: "Manter a Autoridade",
                        description: "A diretora mant√©m a decis√£o mesmo com as reclama√ß√µes da comunidade.",
                        nextNode: "executive_conflict"
                    }
                ]
            },

            executive_learns: {
                chapter: 3,
                title: "Aprendendo com os Erros",
                emoji: "üí°",
                narrator: "Crescimento e Reflex√£o",
                text: "A diretora Carla reconhece que agiu de forma precipitada e autorit√°ria. Ela remove todos os cartazes e envia um novo comunicado pedindo desculpas. Em seguida, convoca uma grande assembleia na escola com pais, alunos, professores e funcion√°rios.",
                character: {
                    name: "Diretora Carla",
                    avatar: "üë©‚Äçüíº",
                    dialogue: "Pe√ßo sinceras desculpas pela minha atitude autorit√°ria. Percebi que estava agindo contra os princ√≠pios democr√°ticos que devemos ensinar aos nossos alunos. Vamos resolver isso juntos, da forma correta, ouvindo todas as vozes!"
                },
                info: "Reconhecer erros e corrigi-los √© uma qualidade fundamental em l√≠deres democr√°ticos. A humildade para recuar e buscar solu√ß√µes participativas fortalece a democracia.",
                choices: [
                    {
                        id: "choice_learn_1",
                        power: "legislativo",
                        icon: "üìú",
                        title: "Processo Democr√°tico",
                        description: "Organizar discuss√µes abertas e criar regras com participa√ß√£o de todos.",
                        nextNode: "democratic_assembly"
                    }
                ]
            },

            executive_conflict: {
                chapter: 3,
                title: "O Conflito se Intensifica",
                emoji: "‚öîÔ∏è",
                narrator: "Tens√£o na Comunidade",
                text: "A diretora mant√©m sua posi√ß√£o autorit√°ria, ignorando as reclama√ß√µes. Os pais se organizam e fazem um protesto na porta da escola. Alguns alunos fazem 'greve', recusando-se a entregar os celulares. A situa√ß√£o se torna um verdadeiro caos e ganha at√© a m√≠dia local!",
                character: {
                    name: "Ana - Representante dos Pais",
                    avatar: "üë©‚Äçüëß‚Äçüë¶",
                    dialogue: "N√£o podemos aceitar esse autoritarismo! Nossos filhos est√£o aprendendo que decis√µes podem ser impostas sem di√°logo. Vamos buscar nossos direitos na Secretaria de Educa√ß√£o e, se necess√°rio, na Justi√ßa!"
                },
                info: "Decis√µes autorit√°rias frequentemente geram conflitos maiores e podem ter consequ√™ncias legais. A falta de di√°logo cria divis√µes na comunidade.",
                choices: [
                    {
                        id: "choice_conflict_1",
                        power: "judiciario",
                        icon: "‚öñÔ∏è",
                        title: "Interven√ß√£o Judicial",
                        description: "Os pais processam a escola por decis√£o arbitr√°ria e viola√ß√£o de direitos.",
                        nextNode: "legal_intervention"
                    },
                    {
                        id: "choice_conflict_2",
                        power: "legislativo",
                        icon: "üìú",
                        title: "Media√ß√£o Institucional",
                        description: "A Secretaria de Educa√ß√£o interv√©m para mediar o conflito democraticamente.",
                        nextNode: "institutional_mediation"
                    }
                ]
            },

            legislative_discussion: {
                chapter: 2,
                title: "A Voz de Toda a Comunidade",
                emoji: "üó£Ô∏è",
                narrator: "Democracia em A√ß√£o",
                text: "A diretora Carla convoca uma grande assembleia na escola. O audit√≥rio fica lotado com pais, alunos de diferentes idades, professores, funcion√°rios e at√© representantes da comunidade local. Cada grupo tem tempo para apresentar sua opini√£o sobre o uso de celulares na escola.",
                character: {
                    name: "Maria - Representante dos Estudantes",
                    avatar: "üßë‚Äçüéì",
                    dialogue: "N√≥s entendemos que os celulares podem atrapalhar as aulas, mas eles tamb√©m s√£o importantes para nossa seguran√ßa e comunica√ß√£o com a fam√≠lia. Que tal criarmos hor√°rios espec√≠ficos e regras que todos concordem? N√≥s queremos participar dessa decis√£o!"
                },
                info: "A participa√ß√£o democr√°tica permite que todos os afetados sejam ouvidos e contribuam para a solu√ß√£o. Isso gera maior aceita√ß√£o e cumprimento das regras.",
                choices: [
                    {
                        id: "choice_legis_1",
                        power: "legislativo",
                        icon: "üìú",
                        title: "Comiss√£o Participativa",
                        description: "Formar uma comiss√£o com representantes de todos os grupos para elaborar as regras.",
                        nextNode: "collaborative_committee"
                    },
                    {
                        id: "choice_legis_2",
                        power: "executivo",
                        icon: "üè¢",
                        title: "Decis√£o Baseada nas Opini√µes",
                        description: "A dire√ß√£o toma a decis√£o final baseada nas opini√µes coletadas.",
                        nextNode: "executive_decision_informed"
                    }
                ]
            },

            collaborative_committee: {
                chapter: 4,
                title: "Construindo Juntos a Solu√ß√£o",
                emoji: "üë•",
                narrator: "Coopera√ß√£o Democr√°tica",
                text: "Uma comiss√£o √© formada com 2 pais, 2 alunos (um do fundamental e outro do m√©dio), 2 professores, 1 funcion√°rio e a diretora. Durante tr√™s semanas, eles se re√∫nem duas vezes por semana, estudam o problema, pesquisam solu√ß√µes de outras escolas e at√© consultam especialistas em educa√ß√£o.",
                character: {
                    name: "Lucas - Aluno do 9¬∫ ano",
                    avatar: "üë¶",
                    dialogue: "Nunca imaginei que participar de decis√µes da escola fosse t√£o interessante! Estamos criando regras que fazem sentido para todos. Aprendemos sobre responsabilidade, democracia e at√© sobre como funciona o governo do pa√≠s!"
                },
                info: "O processo democr√°tico pode demorar mais tempo, mas gera solu√ß√µes mais criativas, aceitas e eficazes.",
                choices: [
                    {
                        id: "choice_committee_1",
                        power: "legislativo",
                        icon: "üìú",
                        title: "Vota√ß√£o Democr√°tica",
                        description: "Apresentar a proposta final para vota√ß√£o de toda a comunidade escolar.",
                        nextNode: "democratic_vote"
                    }
                ]
            },

            democratic_vote: {
                chapter: 5,
                title: "A Grande Vota√ß√£o Democr√°tica",
                emoji: "üó≥Ô∏è",
                narrator: "Vit√≥ria da Democracia",
                text: "A proposta criada pela comiss√£o √© apresentada a toda comunidade escolar em uma nova assembleia. Ap√≥s esclarecimentos e debates, uma vota√ß√£o secreta √© realizada. Com 89% de aprova√ß√£o, as novas regras sobre celulares s√£o oficialmente aprovadas por todos!",
                character: {
                    name: "Diretora Carla",
                    avatar: "üë©‚Äçüíº",
                    dialogue: "Que orgulho! Em apenas dois meses, transformamos um problema em uma li√ß√£o de democracia. As regras que criamos s√£o justas, pr√°ticas e todos ajudaram a construir. Esta √© a verdadeira educa√ß√£o cidad√£!"
                },
                info: "Quando as pessoas participam da cria√ß√£o das regras, elas tendem a respeit√°-las mais e se sentem co-respons√°veis pelos resultados.",
                choices: [
                    {
                        id: "choice_vote_1",
                        power: "executivo",
                        icon: "üè¢",
                        title: "Implementar as Regras",
                        description: "A dire√ß√£o coloca em pr√°tica as regras aprovadas democraticamente.",
                        nextNode: "successful_implementation"
                    }
                ]
            },

            successful_implementation: {
                chapter: 6,
                title: "O Sucesso da Democracia",
                emoji: "üéâ",
                narrator: "Final Inspirador",
                text: "Seis meses depois, a Escola Municipal Esperan√ßa se tornou exemplo para outras institui√ß√µes da regi√£o. As regras sobre celulares funcionam perfeitamente, os alunos respeitam os acordos porque ajudaram a cri√°-los, e at√© desenvolveram projetos educativos usando a tecnologia de forma respons√°vel!",
                character: {
                    name: "Secret√°rio Municipal de Educa√ß√£o",
                    avatar: "üë®‚Äçüíº",
                    dialogue: "Parab√©ns a toda comunidade escolar! Voc√™s mostraram como a democracia funciona na pr√°tica e ser√° um modelo para todas as escolas do munic√≠pio. Esta experi√™ncia ser√° documentada e compartilhada como exemplo de gest√£o democr√°tica!"
                },
                info: "A democracia participativa n√£o apenas resolve problemas, mas tamb√©m educa e fortalece a comunidade para futuros desafios.",
                choices: [
                    {
                        id: "choice_success_1",
                        power: "final",
                        icon: "üèÜ",
                        title: "Completar a Jornada",
                        description: "Finalizar com o aprendizado sobre democracia participativa!",
                        nextNode: "ending_democracy_triumph"
                    }
                ]
            },

            // Outros n√≥s da hist√≥ria...
            ending_democracy_triumph: {
                chapter: 7,
                title: "Triunfo da Democracia Participativa",
                emoji: "üèÜ",
                narrator: "Conclus√£o Perfeita",
                text: "Voc√™s escolheram o caminho perfeito da democracia participativa! A situa√ß√£o do celular foi resolvida de forma exemplar, com todos participando, aprendendo e crescendo juntos como comunidade democr√°tica.",
                learning: [
                    "O Poder Legislativo cria regras atrav√©s de discuss√£o e participa√ß√£o popular",
                    "A democracia participativa gera solu√ß√µes mais aceitas e duradouras", 
                    "O Poder Executivo implementa as decis√µes tomadas democraticamente",
                    "Quando todos participam, toda a comunidade se beneficia",
                    "A educa√ß√£o democr√°tica prepara cidad√£os conscientes e participativos"
                ],
                finalMessage: "Parab√©ns! Voc√™s demonstraram excelente compreens√£o sobre como a democracia funciona na pr√°tica!"
            }
        };

        this.init();
    }

    // ===== INICIALIZA√á√ÉO =====
    init() {
        this.loadProgress();
        this.setupEventListeners();
        this.createParticles();
        
        // Simular carregamento e ir direto para a introdu√ß√£o
        setTimeout(() => {
            this.showScreen('introduction-screen');
        }, 2000);
    }

    setupEventListeners() {
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                this.closeAllModals();
            }
        });

        window.addEventListener('resize', () => {
            this.handleResize();
        });
    }

    // ===== GERENCIAMENTO DE TELAS =====
    showScreen(screenName) {
        // Verificar se o elemento existe primeiro
        const targetScreen = document.getElementById(screenName);
        if (!targetScreen) {
            console.error(`‚ùå Tela n√£o encontrada: ${screenName}`);
            // Tentar mostrar a primeira tela dispon√≠vel como fallback
            const firstScreen = document.querySelector('.screen');
            if (firstScreen) {
                console.log('üîÑ Usando fallback:', firstScreen.id);
                screenName = firstScreen.id;
            } else {
                console.error('‚ùå Nenhuma tela encontrada!');
                return;
            }
        }

        // Esconder todas as telas
        document.querySelectorAll('.screen').forEach(screen => {
            screen.classList.remove('active');
        });

        // Mostrar tela selecionada
        const screen = document.getElementById(screenName);
        screen.classList.add('active');
        this.currentScreen = screenName;

        // A√ß√µes espec√≠ficas por tela
        switch(screenName) {
            case 'story-screen':
                this.displayStoryNode(this.currentStoryNode);
                break;
            case 'powers-summary':
                this.animatePowerCards();
                break;
            case 'end-screen':
                this.showFinalResults();
                break;
        }

        // Anima√ß√£o de entrada
        screen.style.animation = 'fadeIn 0.5s ease-out';
    }

    // ===== SISTEMA DE HIST√ìRIA INTERATIVA =====
    displayStoryNode(nodeId) {
        const node = this.storyNodes[nodeId];
        if (!node) {
            console.error('N√≥ da hist√≥ria n√£o encontrado:', nodeId);
            return;
        }

        // Verificar se os elementos existem antes de tentar atualiz√°-los
        const elements = {
            chapterNumber: document.getElementById('chapter-number'),
            chapterTitle: document.getElementById('chapter-title'),
            progressFill: document.getElementById('progress-fill-story'),
            progressText: document.getElementById('progress-text-story'),
            decisionsMade: document.getElementById('decisions-made'),
            sceneEmoji: document.getElementById('scene-emoji'),
            storyNarrator: document.getElementById('story-narrator'),
            storyText: document.getElementById('story-text'),
            characterDialogue: document.getElementById('character-dialogue'),
            characterAvatar: document.getElementById('character-avatar'),
            characterName: document.getElementById('character-name'),
            dialogueText: document.getElementById('dialogue-text'),
            storyInfo: document.getElementById('story-info'),
            infoText: document.getElementById('info-text')
        };

        // Atualizar apenas elementos que existem
        if (elements.chapterNumber) elements.chapterNumber.textContent = `Cap√≠tulo ${node.chapter}`;
        if (elements.chapterTitle) elements.chapterTitle.textContent = node.title;
        
        // Atualizar progresso
        if (elements.progressFill) {
            const progressPercent = (node.chapter / 7) * 100;
            elements.progressFill.style.width = `${progressPercent}%`;
        }
        if (elements.progressText) {
            elements.progressText.textContent = 
                node.chapter === 7 ? 'Hist√≥ria Conclu√≠da!' : `Cap√≠tulo ${node.chapter} de 7`;
        }

        // Atualizar decis√µes tomadas
        if (elements.decisionsMade) elements.decisionsMade.textContent = this.totalDecisions;

        // Atualizar cena
        if (elements.sceneEmoji) elements.sceneEmoji.textContent = node.emoji;

        // Atualizar texto da hist√≥ria
        if (elements.storyNarrator) elements.storyNarrator.textContent = node.narrator;
        if (elements.storyText) elements.storyText.textContent = node.text;

        // Mostrar di√°logo do personagem se existir
        if (node.character && elements.characterDialogue) {
            if (elements.characterAvatar) elements.characterAvatar.textContent = node.character.avatar;
            if (elements.characterName) elements.characterName.textContent = node.character.name;
            if (elements.dialogueText) elements.dialogueText.textContent = node.character.dialogue;
            elements.characterDialogue.style.display = 'flex';
        } else if (elements.characterDialogue) {
            elements.characterDialogue.style.display = 'none';
        }

        // Mostrar informa√ß√£o educativa se existir
        if (node.info && elements.storyInfo && elements.infoText) {
            elements.infoText.textContent = node.info;
            elements.storyInfo.style.display = 'flex';
        } else if (elements.storyInfo) {
            elements.storyInfo.style.display = 'none';
        }

        // Criar escolhas
        this.createStoryChoices(node.choices);

        // Salvar estado atual
        this.currentStoryNode = nodeId;
    }

    createStoryChoices(choices) {
        const container = document.getElementById('story-choices');
        if (!container) {
            console.warn('Container de escolhas n√£o encontrado');
            return;
        }

        container.innerHTML = '';

        if (!choices || choices.length === 0) {
            return; // N√≥ final
        }

        choices.forEach((choice, index) => {
            const choiceCard = document.createElement('div');
            choiceCard.className = `choice-card ${choice.power}-choice`;
            choiceCard.innerHTML = `
                <div class="choice-header">
                    <span class="choice-icon">${choice.icon}</span>
                    <h4 class="choice-power">Poder ${this.capitalizeFirst(choice.power)}</h4>
                </div>
                <h5>${choice.title}</h5>
                <p class="choice-description">${choice.description}</p>
                <small class="choice-consequence">Clique para ver a consequ√™ncia...</small>
            `;

            choiceCard.addEventListener('click', () => {
                this.makeChoice(choice, index);
            });

            // Anima√ß√£o de entrada escalonada
            choiceCard.style.animation = `fadeInUp 0.6s ease-out ${index * 0.1}s both`;
            
            container.appendChild(choiceCard);
        });
    }

    makeChoice(choice, index) {
        this.totalDecisions++;
        this.userProgress.decisionsPath.push({
            nodeId: this.currentStoryNode,
            choice: choice.id,
            power: choice.power,
            timestamp: new Date().toISOString()
        });

        // Determinar se a escolha foi correta
        const isCorrect = this.evaluateChoice(choice);
        if (isCorrect) {
            this.correctChoices++;
            this.learningPoints += 10;
        } else {
            this.learningPoints += 5;
        }

        // Mostrar consequ√™ncia
        this.showConsequence(choice, isCorrect);
        this.saveProgress();
    }

    evaluateChoice(choice) {
        const correctChoices = {
            'start': 'legislativo',
            'executive_hasty': 'legislativo',
            'executive_conflict': 'legislativo',
            'legislative_discussion': 'legislativo'
        };

        return correctChoices[this.currentStoryNode] === choice.power;
    }

    showConsequence(choice, isCorrect) {
        const modal = document.getElementById('consequence-modal');
        if (!modal) {
            console.warn('Modal de consequ√™ncia n√£o encontrado');
            return;
        }

        const icon = document.getElementById('consequence-icon');
        const title = document.getElementById('consequence-title');
        const text = document.getElementById('consequence-text');
        const educationalContent = document.getElementById('educational-content');

        if (icon && title && text && educationalContent) {
            // Configurar √≠cone e t√≠tulo
            if (isCorrect) {
                icon.textContent = '‚úÖ';
                title.textContent = 'Excelente Escolha!';
                icon.style.color = '#2ECC71';
            } else {
                icon.textContent = 'üí≠';
                title.textContent = 'Vamos Aprender!';
                icon.style.color = '#F39C12';
            }

            // Texto da consequ√™ncia
            text.textContent = this.getConsequenceText(choice, isCorrect);

            // Conte√∫do educativo
            educationalContent.innerHTML = this.getEducationalContent(choice);

            // Mostrar modal
            modal.classList.add('show');
        }
    }

    getConsequenceText(choice, isCorrect) {
        const messages = {
            correct: {
                'executivo': 'Voc√™ entendeu que o Poder Executivo deve implementar decis√µes tomadas democraticamente!',
                'legislativo': 'Perfeito! O Poder Legislativo √© respons√°vel por criar regras atrav√©s da discuss√£o e participa√ß√£o de todos.',
                'judiciario': 'Correto! O Poder Judici√°rio atua quando h√° conflitos legais ou viola√ß√£o de direitos.'
            },
            learning: {
                'executivo': 'O Executivo √© importante, mas decis√µes unilaterais podem gerar conflitos. √â melhor quando h√° participa√ß√£o democr√°tica.',
                'legislativo': 'O caminho democr√°tico √© sempre melhor, mas √†s vezes precisamos considerar o contexto espec√≠fico.',
                'judiciario': 'O Judici√°rio tem sua fun√ß√£o, mas nem sempre √© a primeira op√ß√£o para resolver conflitos sociais.'
            }
        };

        return isCorrect ? 
            messages.correct[choice.power] : 
            messages.learning[choice.power];
    }

    getEducationalContent(choice) {
        const educationalTexts = {
            'executivo': `
                <strong>Sobre o Poder Executivo:</strong>
                <ul>
                    <li>Administra e governa o pa√≠s, estados e munic√≠pios</li>
                    <li>Executa as leis criadas pelo Legislativo</li>
                    <li>Presta servi√ßos p√∫blicos √† popula√ß√£o</li>
                    <li>Deve ser democr√°tico e transparente em suas a√ß√µes</li>
                </ul>
            `,
            'legislativo': `
                <strong>Sobre o Poder Legislativo:</strong>
                <ul>
                    <li>Cria leis atrav√©s de discuss√£o e vota√ß√£o</li>
                    <li>Representa a vontade popular</li>
                    <li>Fiscaliza as a√ß√µes do Executivo</li>
                    <li>Promove debates p√∫blicos sobre quest√µes importantes</li>
                </ul>
            `,
            'judiciario': `
                <strong>Sobre o Poder Judici√°rio:</strong>
                <ul>
                    <li>Interpreta e aplica as leis</li>
                    <li>Resolve conflitos entre pessoas e institui√ß√µes</li>
                    <li>Garante que a Constitui√ß√£o seja respeitada</li>
                    <li>Protege direitos fundamentais dos cidad√£os</li>
                </ul>
            `
        };

        return educationalTexts[choice.power] || 'Conte√∫do educativo n√£o dispon√≠vel.';
    }

    continueStory() {
        const modal = document.getElementById('consequence-modal');
        if (modal) modal.classList.remove('show');

        // Ir para o pr√≥ximo n√≥
        if (this.userProgress.decisionsPath.length > 0) {
            const lastChoice = this.userProgress.decisionsPath[this.userProgress.decisionsPath.length - 1];
            const choice = this.findChoiceById(lastChoice.choice);
            
            if (choice && choice.nextNode) {
                if (choice.nextNode.startsWith('ending_')) {
                    this.showScreen('end-screen');
                } else {
                    this.displayStoryNode(choice.nextNode);
                }
            }
        }
    }

    findChoiceById(choiceId) {
        for (let nodeId in this.storyNodes) {
            const node = this.storyNodes[nodeId];
            if (node.choices) {
                const found = node.choices.find(c => c.id === choiceId);
                if (found) return found;
            }
        }
        return null;
    }

    // ===== UTILIT√ÅRIOS =====
    capitalizeFirst(str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
    }

    createParticles() {
        const container = document.getElementById('particles');
        if (!container) return;

        for (let i = 0; i < 20; i++) {
            setTimeout(() => {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.left = Math.random() * 100 + 'vw';
                particle.style.width = particle.style.height = Math.random() * 4 + 2 + 'px';
                particle.style.animationDuration = (Math.random() * 10 + 10) + 's';
                container.appendChild(particle);

                setTimeout(() => {
                    if (particle.parentNode) {
                        particle.parentNode.removeChild(particle);
                    }
                }, 20000);
            }, i * 200);
        }
    }

    closeAllModals() {
        document.querySelectorAll('.modal, .consequence-modal').forEach(modal => {
            modal.classList.remove('show');
            modal.style.display = 'none';
        });
    }

    handleResize() {
        // Implementar ajustes responsivos se necess√°rio
    }

    animatePowerCards() {
        const cards = document.querySelectorAll('.power-detailed-card');
        cards.forEach((card, index) => {
            card.style.animation = `fadeInUp 0.6s ease-out ${index * 0.2}s both`;
        });
    }

    showFinalResults() {
        console.log('Mostrando resultados finais...');
        // Implementar l√≥gica de resultados finais
    }

    saveProgress() {
        try {
            const progressData = {
                userProgress: this.userProgress,
                currentStoryNode: this.currentStoryNode,
                totalDecisions: this.totalDecisions,
                correctChoices: this.correctChoices,
                learningPoints: this.learningPoints
            };
            localStorage.setItem('three-powers-progress', JSON.stringify(progressData));
        } catch (error) {
            console.warn('Erro ao salvar progresso:', error);
        }
    }

    loadProgress() {
        try {
            const saved = localStorage.getItem('three-powers-progress');
            if (saved) {
                const data = JSON.parse(saved);
                this.userProgress = { ...this.userProgress, ...data.userProgress };
                this.currentStoryNode = data.currentStoryNode || 'start';
                this.totalDecisions = data.totalDecisions || 0;
                this.correctChoices = data.correctChoices || 0;
                this.learningPoints = data.learningPoints || 0;
            }
        } catch (error) {
            console.warn('Erro ao carregar progresso:', error);
        }
    }
}

// ===== FUN√á√ïES GLOBAIS =====
let threePowers;

function startChallenge() {
    if (threePowers) threePowers.showScreen('challenge-intro');
}

function startStory() {
    if (threePowers) {
        threePowers.userProgress.startTime = new Date().toISOString();
        threePowers.currentStoryNode = 'start';
        threePowers.showScreen('story-screen');
    }
}

function continueStory() {
    if (threePowers) threePowers.continueStory();
}

function showPowersSummary() {
    if (threePowers) threePowers.showScreen('powers-summary');
}

function backToIntroduction() {
    if (threePowers) threePowers.showScreen('introduction-screen');
}

function restartExperience() {
    if (threePowers && confirm('Tem certeza que deseja recome√ßar?')) {
        threePowers.currentStoryNode = 'start';
        threePowers.totalDecisions = 0;
        threePowers.correctChoices = 0;
        threePowers.learningPoints = 0;
        threePowers.userProgress.decisionsPath = [];
        threePowers.showScreen('introduction-screen');
    }
}

// ===== INICIALIZA√á√ÉO =====
document.addEventListener('DOMContentLoaded', () => {
    threePowers = new ThreePowersEducationSystem();
    window.threePowers = threePowers; // Para debug
});
